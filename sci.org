* Scientific Project Template :sciproj:
:PROPERTIES:
:header-args: :tangle-mode (identity #o555) :mkdirp yes :noweb yes :comments org
:ID:       00656e3d-e62c-4ace-a27c-252b56010fe0
:END:
** TODO Search #TEMPLATE# for needed manual updates?
** Project Administration
*** Bash
**** Src
:PROPERTIES:
:header-args:bash: :tangle ./config/bash_src
:END:
#+begin_src bash

#+end_src

*** Emacs
#+TODO: TODO TEST(t) DEBUG(d) REFACTOR(r) DOCUMENT(d) BLOCKED(b&) WAITING(w&) | DONE DELEGATED
*** Python
**** Environmental YAMLs
**** Configuration YAMLS
***** Common
*** R
*** Snakemake
**** Configuration YAMLs
***** Common
:PROPERTIES:
:header-args:bash: :tangle ./config/int_common.yaml
:END:
**** Variable naming
#+name: variable_naming
#+begin_src snakemake

###########################
###   Variable Naming   ###
###########################

# ---   Variables Directly From Configuration YAML   --- #
# ------------------------------------------------------ #

# ---   Specific File Paths   --- #
# ------------------------------- #

# ---   Directory Structure   --- #
# ------------------------------- #

# |-- Repository directory
#   |-- config
#   |-- resources
#   |-- scripts
#   |-- workflows

# |-- Data directory
#   |-- analysis
#   |-- benchmark
#   |-- inputs
#   |-- log
#   |-- ref
#   |-- results

# ---   Miscellaneous   --- #
# ------------------------- #

#+end_src
**** Load packages
#+name: load_packages
#+begin_src snakemake

#####################################
###   Import Necessary Packages   ###
#####################################

from snakemake.logging import logger
import numpy as np
import pandas as pd
import re
import socket
import sys

#+end_src
**** Load configuration
#+name: load_configuration
#+begin_src snakemake
##############################
###   Load Configuration   ###
##############################

configfile: "config/common.yaml"

hostname = socket.gethostname()
config_path = "config/" + hostname + ".yaml"

# Check if the configuration file exists:
if os.path.isfile(config_path):
    configfile: config_path

#+end_src
**** Functions
***** Sample lists
#+name: sample_lists
#+begin_src snakemake

#+end_src
**** Include statements
#+begin_src snakemake

##############################
###   Include Statements   ###
##############################

# e.g.
# include: cardiac_repo + "/rna-seq/workflow/rna.smk"
#+end_src
** Biological model
** Data model
*** [[file:workflows/data.smk][Snakefile]]
:PROPERTIES:
:header-args:snakemake: :tangle ./workflow/data.smk :comments org
:END:
**** [[file:resources/data_smk.pdf][Rulegraph]]
#+ATTR_ORG :width 600px
file:resources/data_smk.png
**** Preamble
#+begin_src snakemake
#TEMPLATE#
#+end_src
**** #TEMPLATE# LINK to Load packages
**** #TEMPLATE# LINK to Load configuation
**** #TEMPLATE# LINK to variable naming
**** Onstart
#+begin_src snakemake
#TEMPLATE#
#+end_src
**** Functions
#+begin_src snakemake
#TEMPLATE#
#+end_src
**** All rule
#+begin_src snakemake
rule all:
#TEMPLATE#
#+end_src
**** On success
#+begin_src snakemake
#TEMPLATE#
#+end_src
**** Development
:PROPERTIES:
:header-args:snakemake: :tangle no
:END:
**** Ideas
:PROPERTIES:
:header-args:snakemake: :tangle no
:END:
** Methods
*** Analysis 1
**** Preamble
#+begin_src snakemake
#TEMPLATE#
#+end_src


**** #TEMPLATE# LINK to Load packages
#+begin_src snakemake
<#load_package#>
#+end_src
**** #TEMPLATE# LINK to Load configuration
#+begin_src snakemake
<#load_config#>
#+end_src
**** #TEMPLATE# LINK to variable naming
#+begin_src snakemake
<#variable_naming#>
#+end_src
**** Functions
**** All rule
#+begin_src snakemake
rule all:
#+end_src
**** On success
#+begin_src snakemake

#+end_src

** Results
*** [[file:workflows/results.smk][Snakefile]]
:PROPERTIES:
:header-args:snakemake: :tangle ./workflows/results.smk
:END:
**** Preamble
#+begin_src snakemake
#TEMPLATE#
#+end_src
**** #TEMPLATE# LINK to Load packages
#+begin_src snakemake
<#load_package#>
#+end_src
**** #TEMPLATE# LINK to Load configuration
#+begin_src snakemake
<#load_config#>
#+end_src
**** #TEMPLATE# LINK to variable naming
#+begin_src snakemake
<#variable_naming#>
#+end_src
**** Functions
**** All rule
#+begin_src snakemake
rule all:
#+end_src
**** On success
#+begin_src snakemake

#+end_src
*** Running results report
:PROPERTIES:
:ID: #TEMPLATE#
:export_options: #TEMPLATE#
:export_file_name: /tmp/#TEMPLATE#.pdf
:export_file_title: #TEMPLATE#
:export_author: Jeffrey Szymanski
:export_date:
:export_latex_class: empty
:export_latex_header: \usepackage{/home/jeszyman/repos/latex/sty/report}
:END:
**** LaTeX Preamble                                                  :ignore:
\newcommand{\datadir}{#TEMPLATE#}
\setcounter{secnumdepth}{0}
\vspace{5mm}
\hfill Last compiled {{{time(%Y-%m-%d)}}}.
\setcounter{tocdepth}{2}
\tableofcontents


*** Scientific Figure
:PROPERTIES:
:header-args:r: :session template
:END:
[[file:/tmp/cars/cars.png]]
- Make tables from low-level data
  #+name: cars_tbl
  #+begin_src R : :results replace
library(tidyverse)

base <- "cars"
dir <- paste0("/tmp/", base)
rda <- file.path(dir, paste0(base, ".rda"))
tsv <- file.path(dir, paste0(base, ".tsv"))

# Create the directory if it doesn't exist
if (!dir.exists(dirname(rda))) {
  dir.create(dirname(rda), recursive = TRUE)
}

cars_tbl <- mtcars %>%
  rename(Gear = gear,
         MPG = mpg,
         Carbs = carb) %>%
  select(Gear, MPG, Carbs)
cars_tbl

save(cars_tbl, file = rda)
write_tsv(cars_tbl, file = tsv)
cars_tbl
#+end_src
- Table
  #+RESULTS[f0dfa47b85db7cdb5f532c2298650d49a32d3c44]: cars_tbl
  | 4 |   21 | 4 |
  | 4 |   21 | 4 |
  | 4 | 22.8 | 1 |
  | 3 | 21.4 | 1 |
  | 3 | 18.7 | 2 |
  | 3 | 18.1 | 1 |
  | 3 | 14.3 | 4 |
  | 4 | 24.4 | 2 |
  | 4 | 22.8 | 2 |
  | 4 | 19.2 | 4 |
  | 4 | 17.8 | 4 |
  | 3 | 16.4 | 3 |
  | 3 | 17.3 | 3 |
  | 3 | 15.2 | 3 |
  | 3 | 10.4 | 4 |
  | 3 | 10.4 | 4 |
  | 3 | 14.7 | 4 |
  | 4 | 32.4 | 1 |
  | 4 | 30.4 | 2 |
  | 4 | 33.9 | 1 |
  | 3 | 21.5 | 1 |
  | 3 | 15.5 | 2 |
  | 3 | 15.2 | 2 |
  | 3 | 13.3 | 4 |
  | 3 | 19.2 | 2 |
  | 4 | 27.3 | 1 |
  | 5 |   26 | 2 |
  | 5 | 30.4 | 2 |
  | 5 | 15.8 | 4 |
  | 5 | 19.7 | 6 |
  | 5 |   15 | 8 |
  | 4 | 21.4 | 2 |
- Make figure
  #+begin_src R
library(cowplot)
library(tidyverse)
load("/tmp/cars/cars.rda")
pdf <- file.path("/tmp/cars/cars.pdf")
png <- file.path("/tmp/cars/cars.png")

plot =
  ggplot(cars_tbl, aes(x = Gear, y = MPG)) +
  geom_boxplot() +
  facet_grid(~ Carbs, scales = "free")

pdf(pdf)
plot
dev.off()
png(png)
plot
dev.off()
#+end_src
** Development
** Ideas
** Reference
*** [[file:biopipe.org][Scientific project template]]
